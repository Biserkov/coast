(ns controllers.__table
  (:require [coast.responses :as res]
            [coast.errors :as errors]
            [models.__table :as m.__table]
            [views.__table :as v.__table])
  (:refer-clojure :exclude [update new]))

(defn index [request]
  (-> (m.__table/list request)
      (v.__table/index)))

(defn show [request]
  (-> (m.__table/find request)
      (v.__table/show)))

(defn new [request]
  (v.__table/new request))

(defn create [request]
  (let [response (-> (m.__table/create request)
                     (errors/catch!))]
    (if (errors/error? response)
      (v.__table/new (merge request response))
      (-> (res/redirect "/__table")
          (res/flash "__singular created successfully")))))

(defn edit [request]
  (-> (m.__table/find request)
      (v.__table/edit)))

(defn update [request]
  (let [response (-> (m.__table/find request)
                     (m.__table/update)
                     (errors/catch!))]
    (if (errors/error? response)
      (edit (merge request response))
      (-> (res/redirect "/__table")
          (res/flash "__singular updated successfully")))))

(defn delete [request]
  (let [response (-> (m.__table/find request)
                     (m.__table/delete)
                     (errors/catch!))]
    (if (errors/error? response)
      (-> (res/redirect "/__table")
          (res/flash "__singular could not be deleted"))
      (-> (res/redirect "/__table")
          (res/flash "__singular deleted successfully")))))

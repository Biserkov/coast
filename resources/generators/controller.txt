(ns controllers.__table
  (:require [coast.responses :as res]
            [coast.errors :as errors]
            [models.__table :as m.__table]
            [views.__table :as v.__table])
  (:refer-clojure :exclude [update new]))

(defn index [request]
  (-> (m.__table/list request)
      (v.__table/index)))

(defn show [request]
  (-> (m.__table/find request)
      (v.__table/show)))

(defn new [request]
  (v.__table/new request))

(defn create [request]
  (let [errors (-> (m.__table/create request)
                   (errors/catch+ :invalid))]
    (if (empty? errors)
      (-> (res/redirect "/__table")
          (res/flash "__singular created successfully"))
      (v.__table/new (assoc request :errors errors)))))

(defn edit [request]
  (-> (m.__table/find request)
      (v.__table/edit)))

(defn update [request]
  (let [errors (-> (m.__table/find request)
                   (m.__table/update)
                   (errors/catch+))]
    (if (empty? errors)
      (-> (res/redirect "/__table")
          (res/flash "__singular updated successfully"))
      (edit (assoc request :errors errors)))))

(defn delete [request]
  (let [errors (-> (m.__table/find request)
                   (m.__table/delete)
                   (errors/catch+))]
    (if (empty? errors)
      (-> (res/redirect "/__table")
          (res/flash "__singular deleted successfully"))
      (-> (res/redirect "/__table")
          (res/flash "__singular could not be deleted")))))

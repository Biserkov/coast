(ns coast.core
  (:require [potemkin]
            [trail.core]
            [bunyan.core]
            [environ.core]
            [hiccup.page]
            [hiccup.core]
            [ring.middleware.resource]
            [coast.responses]
            [word.core]
            [coast.utils]
            [coast.db]
            [ring.middleware.defaults]
            [coast.components]
            [ring.middleware.session.cookie]
            [ring.middleware.flash]
            [prone.middleware]
            [coast.middleware]
            [coast.server])
  (:refer-clojure :exclude [get]))

(potemkin/import-vars
  [trail.core
   get
   post
   put
   patch
   delete
   resource
   route-not-found
   wrap-routes-with
   match-routes
   url-for
   action-for
   coerce-params
   wrap-coerce-params
   wrap-match-routes]
  [bunyan.core
   wrap-with-logger]
  [environ.core
   env]
  [hiccup.page
   html5
   include-js
   include-css]
  [hiccup.core
   html]
  [ring.middleware.resource
   wrap-resource]
  [coast.responses
   ok
   redirect
   bad-request
   unauthorized
   not-found
   forbidden
   internal-server-error]
  [coast.db
   query
   unique-index-error?
   transact!]
  [word.core
   plural
   singular]
  [coast.utils
   try!
   now
   uuid
   parse-int
   current-user
   printerr
   dev?
   test?
   prod?
   map-vals
   validate]
  [ring.middleware.defaults
   wrap-defaults
   site-defaults]
  [coast.components
   csrf
   form-for
   link-to]
  [ring.middleware.session.cookie
   cookie-store]
  [ring.middleware.flash
   wrap-flash]
  [prone.middleware
   wrap-exceptions]
  [coast.middleware
   wrap-coast-defaults
   wrap-layout]
  [coast.server
   start-server
   stop
   restart])
